"use strict";(self.webpackChunkdimension_stream_github_io=self.webpackChunkdimension_stream_github_io||[]).push([[830],{830:(n,e,t)=>{t.r(e),t.d(e,{init:()=>u});var a,o,i,r,v=t(466),m=t(212),s=t(365),d={uniforms:{u_data:{value:-1},u_inv_modelview_pos:{value:-1}},vertexShader:'\n        uniform vec3 u_inv_modelview_pos;\n        out vec3 v_rd;\n        void main() {\n            // Transform rd to "aabb" space.\n            v_rd = position.xyz - u_inv_modelview_pos;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }',fragmentShader:'\n        precision highp float;\n        precision highp sampler3D;\n        uniform vec3 u_inv_modelview_pos;\n        uniform sampler3D u_data;\n        in vec3 v_rd;\n\n        float min_component(in vec3 v) {\n            return min(min(v.x, v.y), v.z);\n        }\n\n        float max_component(in vec3  v) {\n            return max(max(v.x, v.y), v.z);\n        }\n\n        // Intersect a ray with aabb where aabb.mix.xyz = -1, and aabb.max.xyz = 1.\n        // returns vec2(min_t, max_t).\n        vec2 boxIntersection(in vec3 ro, in vec3 rd) {\n            vec3 m = 1.0/rd;\n            vec3 n = ro*m;\n            vec3 t0 = -m - n;\n            vec3 t1 = m - n;\n            // isect if mint <= maxt;\n            return vec2(max_component(min(t0,t1)), min_component(max(t0,t1)));\n        }\n\n        float hash(vec2 p) { return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x)))); }\n        const float E = 2.7182818284;\n        void main() {\n            // Transform rays to "aabb" space.\n            vec3 rd = normalize(v_rd);\n            vec3 ro = u_inv_modelview_pos;\n            vec2 ti = boxIntersection(ro, rd);\n\n            vec3 H = vec3(0.0);\n            float V_i = 0.0;\n            const float dt = 2.0/512.0;\n            // for(float t = max(ti.x, 0.0) + 1.0*dt*(2.0*hash(rd.xy)-1.0); (t < ti.y); t+=dt)\n            for(float t = max(ti.x, 0.0); (t < ti.y); t+=dt)\n            {\n                vec3 pos = ro + t*rd;\n                // pos.xyz is in range (-1, 1).\n                vec3 uv = 0.5*pos+0.5;\n                vec4 val = texture(u_data, uv);\n                val.a = 256.0*(exp(val.a)-1.0)/(E-1.0); // uint8(255*log((e-1)*clamp(v,0,S)/S + 1)), S=256\n                // val.a = 256.0*val.a; // uint8(255*clamp(v,0,S)/S), S=256\n                // float v = val.a; // float\n                if(val.a > 5.0)\n                {\n                    float v = val.a*dt;\n                    H += exp(-V_i) * (1.0 - exp(-v)) * val.rgb;\n                    V_i += v;\n                }\n            }\n            // V_i = V_i*smoothstep(0.1, 1.0, V_i);\n            gl_FragColor.xyz = H + exp(-V_i) * vec3(0.0);\n        }'};function l(){var n=document.getElementById("volume-canvas");return[n.clientWidth,n.clientHeight]}function c(){r.begin(),a.render(o,i),requestAnimationFrame(c),r.end()}function u(){(r=new v).showPanel(0),document.body.appendChild(r.dom);var n=document.getElementById("volume-canvas");a=new m.CP7({antialias:!1,canvas:n});var e=l();a.setSize(e[0],e[1]),window.addEventListener("resize",p),o=new m.xsS,(i=new m.cPb(60,e[0]/e[1],.1,10)).position.set(-1.2,1.2,1.5),i.lookAt(0,0,0),new s.z(i,a.domElement),o.add(i);var t=document.getElementById("progress"),u=document.getElementById("progress_bar"),_=document.getElementById("progress_text"),f=new m.hH6;f.setResponseType("arraybuffer"),f.load("https://www.dl.dropboxusercontent.com/s/ghkcqh7imphj90n/grid_512_v4_4.bin?dl=1",(function(n){var e=new Uint8Array(n),a=new m.zob(e,512,512,512);a.format=m.wk1,a.type=m.ywz,a.magFilter=m.wem,a.minFilter=m.wem,a.needsUpdate=!0,a.generateMipmaps=!1;var i=d,r=m.rDY.clone(i.uniforms);r.u_data.value=a,r.u_inv_modelview_pos.value=new m.Pa4;var v=new m.jyz({uniforms:r,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:m._Li}),s=new m.DvJ(2,2,2),l=new m.Kj0(s,v);l.rotation.set(Math.PI/2,Math.PI,Math.PI),l.onBeforeRender=function(n,e,t,a,o,i){o.uniforms.u_inv_modelview_pos.value.setFromMatrixColumn(t.matrixWorldInverse.clone().multiply(l.matrixWorld).invert(),3)},o.add(l),t.style.display="none"}),(function(n){u.value=n.loaded/n.total*100,_.innerHTML=Math.round(n.loaded/n.total*100)+"%"}),(function(n){console.log("Error: "+n)})),c()}function p(){var n=l();i.aspect=n[0]/n[1],i.updateProjectionMatrix(),a.setSize(n[0],n[1])}}}]);